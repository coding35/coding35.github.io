[
    {
        "id": "1",
        "type" : "architecture",
        "title": "Ambassador Pattern",
        "subtitle": "Offload common client connectivity tasks in a language agnostic way.",
        "description": "Based on the Sidecar pattern, the Ambassador is an application that runs alongside client applications to provide additional connectivity functionality such as routing, logging, monitoring, authentication, resilience and more.",
        "date": "2023-03-04T19:08:51.568Z",
        "author": "Adam Reed",
        "avatar" : "AR",
        "readTime": 5,
        "content": "",
        "tags": [
        ],
        "image": "../assets/images/shane-rounce-1ZZ96uESRJQ-unsplash-resize.jpg",
        "imageAlt": "",
        "references": [
        ],
        "categories": [
            "architecture"
        ]
    },
    {
        "id": "2",
        "type" : "architecture",
        "title": "Sidecar Pattern",
        "subtitle": "Separate the functionality of an applicaiton into co-located components running along side the core application.",
        "description": "Sidecar components are specialized co-located containers that communicate to the main application over a network interface using lightweight communication protocols such as HTTP, gRPC, or WebSockets.",
        "date": "2023-03-10T19:08:51.568Z",
        "author": "Adam Reed",
        "avatar" : "AR",
        "readTime": 3,
        "content": "",
        "tags": [
        ],
        "image": "../assets/templates/2/Image_by_Peter_Morth_from_Pixabay.jpg",
        "imageAlt": "",
        "references": [

        ],
        "categories": [
            "architecture"
        ]
    },
    {
        "id": "3",
        "type" : "coding",
        "title": "Chaos Engineering",
        "subtitle": "A tool to introduce failure into the system intentionally.",
        "description": "The Chaos Engineering methodology is to build confidence in the system's capability to withstand turbulent conditions in production by intentionally injecting failures into the system.",
        "date": "2023-03-10T19:08:51.568Z",
        "author": "Adam Reed",
        "avatar" : "AR",
        "readTime": 7,
        "content": "",
        "tags": [
            "snippet"
        ],
        "image": "../assets/images/Image_by_Lawrence_Monk_from_Pixabay.jpg",
        "imageAlt": "",
        "references": [

        ],
        "categories": [
            "coding",
            "design"
        ]
    },
    {
        "id": "4",
        "type" : "electronics",
        "title": "4-bit Full Adder",
        "subtitle": "Add two 4-bit numbers together using logic gates.",
        "description": "A schematic and breadboard layout of a 4-bit adder using logic gates.",
        "date": "2023-03-11T19:08:51.568Z",
        "author": "Adam Reed",
        "avatar" : "AR",
        "readTime": 5,
        "content": "",
        "tags": [
        ],
        "image": "../assets/images/Image_by_axonite_from_Pixabay.jpg",
        "imageAlt": "",
        "references": [
        ],
        "categories": [
            "electronics"
        ]
    },
    {
        "id": "5",
        "type" : "architecture",
        "title": "Anti-corruption Layer Pattern",
        "subtitle": "A pattern to ensure that an application's design is not limited by dependencies on outside subsystems.",
        "description": "Translates requests that one subsystem makes to the other subsystem.",
        "date": "2023-03-14T19:08:51.568Z",
        "author": "Adam Reed",
        "avatar" : "AR",
        "readTime": 3,
        "content": "",
        "tags": [
        ],
        "image": "../assets/images/Image_by_PIRO_from_Pixabay.jpg",
        "imageAlt": "",
        "references": [

        ],
        "categories": [
            "architecture"
        ]
    },
    {
        "id": "6",
        "type" : "design",
        "title": "Object Composition",
        "subtitle": "Favor object composition over class inheritance.",
        "description": "In object-oriented programming, object composition is a technique for creating complex objects by combining simpler objects or components.",
        "date": "2023-03-17T19:08:51.568Z",
        "author": "Adam Reed",
        "avatar" : "AR",
        "readTime": 5,
        "content": "",
        "tags": [
            "snippet"
        ],
        "image": "../assets/images/Image_by_Magic_Creative_from_Pixabay.png",
        "imageAlt": "",
        "references": [

        ],
        "categories": [
        "design"
        ]
    },
    {
        "id": "7",
        "type" : "book",
        "title": "Design Patterns: Elements of Reusable Object-Oriented Software",
        "subtitle": "OOO design patterns and how to use them.",
        "description": "Design Patterns is a book by the Gang of Four (Erich Gamma, Richard Helm, Ralph Johnson, and John Vlissides) that describes software design patterns. The book's authors are often referred to as the Gang of Four (GoF).",
        "date": "2023-03-16T19:08:51.568Z",
        "author": "Adam Reed",
        "avatar" : "AR",
        "readTime": 1,
        "content": "",
        "tags": [
        ],
        "image": "../../../assets/templates/7/designpatterns_gof.jpeg",
        "imageAlt": "",
        "references": [

        ],
        "categories": [
            "books"
        ]
    }
    ,
    {
        "id": "8",
        "type" : "book",
        "title": "Deep Work: Rules for Focused Success in a Distracted World",
        "subtitle": "Amazing book on how to focus and get things done.",
        "description": "Deep Work is a book by Cal Newport that describes how to focus on deep work and how to get things done. A must read for the modern day developer.",
        "date": "2023-03-17T19:08:51.568Z",
        "author": "Adam Reed",
        "avatar" : "AR",
        "readTime": 1,
        "content": "",
        "tags": [
        ],
        "image": "../../../assets/templates/8/deepwork.jpg",
        "imageAlt": "",
        "references": [

        ],
        "categories": [
            "books",
            "productivity"
        ]
    },
    {
        "id": "9",
        "type" : "book",
        "title": "The Pragmatic Programmer: Your Journey To Mastery, 20th Anniversary Edition (2nd Edition)",
        "subtitle": "Get ready for a journey to mastery.",
        "description": "The Pragmatic Programmer is a book by Andrew Hunt and David Thomas that describes how to be a better programmer. Another must read for the modern day developer.",
        "date": "2022-03-17T19:08:51.568Z",
        "author": "Adam Reed",
        "avatar" : "AR",
        "readTime": 1,
        "content": "",
        "tags": [
        ],
        "image": "../../../assets/templates/9/pragmaticprogrammer.jpg",
        "imageAlt": "",
        "references": [

        ],
        "categories": [
            "books"
        ]
    },
    {
        "id": "10",
        "type" : "book",
        "title": "Extreme Programming Explained: Embrace Change, 2nd Edition (The XP Series) 2nd Edition",
        "subtitle": "Great book to pickup to learn about XP.",
        "description": "Wow, this book is great. It's a great book to pickup to learn about XP. Get ready for an awakening.",
        "date": "2023-02-13T19:08:51.568Z",
        "author": "Adam Reed",
        "avatar" : "AR",
        "readTime": 1,
        "content": "",
        "tags": [
        ],
        "image": "../../../assets/templates/10/xp_programming.jpg",
        "imageAlt": "",
        "references": [

        ],
        "categories": [
            "books",
            "productivity"
        ]
    },
    {
        "id": "11",
        "type" : "design",
        "title": "Class Inheritance",
        "subtitle": "Extend functionality by reusing functionality in parent classes.",
        "description": "A rapid way to define an object that is based on another object, retaining similar characteristics.",
        "date": "2023-03-18T19:08:51.568Z",
        "author": "Adam Reed",
        "avatar" : "AR",
        "readTime": 5,
        "content": "",
        "tags": [
            "snippet"
        ],
        "image": "../assets/images/Image_by_ Monika_Schr√∂der_ from_Pixabay.jpg",
        "imageAlt": "",
        "references": [

        ],
        "categories": [
        "design"
        ]
    },
    {
        "id": "12",
        "type" : "design",
        "title": "Class Types",
        "subtitle": "The differences and when to use them.",
        "description": "Choosing the right class type for particular use cases promotes efficient, maintainable, and easy to understand code.",
        "date": "2023-03-18T19:08:51.568Z",
        "author": "Adam Reed",
        "avatar" : "AR",
        "readTime": 5,
        "content": "",
        "tags": [
        ],
        "image": "../assets/images/Image_by_Mike_Sweeney_from_Pixabay.jpg",
        "imageAlt": "",
        "references": [

        ],
        "categories": [
        "design"
        ]
    },
    {
        "id": "13",
        "type" : "book",
        "title": "How Computers Really Work",
        "subtitle": "A Hands-On Guide to the Inner Workings of the Machine",
        "description": "This is a very interesting and entertaining ready with plenty of hands-on activities. From binary to the internet, this book covers it all.",
        "date": "2023-01-11T19:08:51.568Z",
        "author": "Adam Reed",
        "avatar" : "AR",
        "readTime": 1,
        "content": "",
        "tags": [
        ],
        "image": "../../../assets/templates/13/how-computers-really-work_fullcvr_v08_front.jpg",
        "imageAlt": "",
        "references": [

        ],
        "categories": [
            "books"
        ]
    },
    {
        "id": "14",
        "type" : "design",
        "title": "Object Composition Delegation",
        "subtitle": "Making object composition as powerful as inheritance.",
        "description": "Object composition delegation is a design pattern that allows you to delegate functionality to composed objects. Object A composed of object B delegates some of its functionality to object B.",
        "date": "2023-03-18T19:08:51.568Z",
        "author": "Adam Reed",
        "avatar" : "AR",
        "readTime": 5,
        "content": "",
        "tags": [
            "snippet"
        ],
        "image": "../assets/images/Image_by_Gerd_Altmann_from_Pixabay.jpg",
        "imageAlt": "",
        "references": [

        ],
        "categories": [
        "design"
        ]
    },
    {
        "id": "15",
        "type" : "book",
        "title": "Understanding Software",
        "subtitle": "Embrace simplicity in software development.",
        "description": "Max Kanat-Alexander presents an insight software development in a highly relatable way. A great read or listen.e",
        "date": "2022-01-18T19:08:51.568Z",
        "author": "Adam Reed",
        "avatar" : "AR",
        "readTime": 1,
        "content": "",
        "tags": [
        ],
        "image": "../assets/templates/15/understandingsoftware.jpeg",
        "imageAlt": "",
        "references": [

        ],
        "categories": [
        "books"
        ]
    },
    {
        "id": "16",
        "type" : "productivity",
        "title": "SQ3R, Cornell Note Taking, and Spacing Effect",
        "subtitle": "Survey, Question, Read, Recite, Review, Relate, Spacing",
        "description": "SQ3R complimented with the Cornell Note Taking System and spacing effect is a hybrid reading comprehension strategy that helps you to read more efficiently and effectively. A great way to read technical books.",
        "date": "2023-03-19T19:08:51.568Z",
        "author": "Adam Reed",
        "avatar" : "AR",
        "readTime": 1,
        "content": "",
        "tags": [
        ],
        "image": "../assets/images/Image_by_ElasticComputeFarm_from_Pixabay.jpg",
        "imageAlt": "",
        "references": [

        ],
        "categories": [
        "productivity"
        ]
    }

]